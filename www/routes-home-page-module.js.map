{"version":3,"sources":["./src/app/components/login-form/login-form.component.html","./src/app/components/post/post.component.html","./src/app/routes/home-page/home-page.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/module.ts","./src/app/components/post/module.ts","./src/app/components/post/post.component.ts","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/module.ts","./src/app/routes/home-page/router.ts"],"names":[],"mappings":"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","file":"routes-home-page-module.js","sourcesContent":["export default \"<form   \\n  [formGroup]=\\\"form\\\" \\n  (submit)=\\\"submitForm()\\\"\\n>\\n    <fieldset>\\n        <legend>Credentials</legend>\\n        <label for=\\\"email\\\">Email</label>\\n        <input \\n            type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" required minlength=\\\"5\\\"\\n            formControlName=\\\"email\\\"\\n        >\\n\\n        <label for=\\\"password\\\">Password</label>\\n        <input \\n            type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" required minlength=\\\"5\\\"\\n            formControlName=\\\"password\\\"\\n        >\\n    </fieldset>\\n\\n  <button \\n    type=\\\"submit\\\"\\n    [disabled]=\\\"!form.valid\\\"\\n  >Register</button>\\n</form>\"","export default \"<h2 [innerText]=\\\"post.title\\\"></h2>\\n<p [innerText]=\\\"post.body\\\"></p>\\n\\n<button \\n    (click)=\\\"sendPostId.emit({ id: post.id, action: 'read' })\\\"\\n>Read more...</button>\\n<button \\n    (click)=\\\"sendPostId.emit({ id: post.id, action: 'edit' })\\\"\\n>Edit</button>\\n\\n<button \\n    (click)=\\\"sendPostId.emit({ id: post.id, action: 'delete' })\\\"\\n>Delete</button>\"","export default \"<app-login-form></app-login-form>\\n\\n<ul *ngIf=\\\"postCollection\\\">\\n  <li *ngFor=\\\"let item of postCollection\\\">\\n    <app-post\\n      [post]=\\\"item\\\"\\n      (sendPostId)=\\\"openPostPage($event)\\\"\\n    ></app-post>\\n  </li>\\n</ul>\"","/* \nImports & definition \n*/\nimport { Component, OnInit, OnChanges, Output, Input, EventEmitter, ComponentFactoryResolver } from '@angular/core';\n\n// Gestion des formulaires\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CrudService } from \"../../services/crud/crud.service\";\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html'\n})\n//\n\n/* \nExport\n*/\nexport class LoginFormComponent implements OnInit, OnChanges {\n  \n\n  /* \n  Declaration\n  */\n    @Output() register = new EventEmitter();\n    public form: FormGroup;\n  //\n    constructor( private FormBuilder: FormBuilder, private CrudService: CrudService ) { }\n\n  /* \n  Methods\n  */\n    private resetForm = () => {\n      this.form = this.FormBuilder.group({\n        email: [ undefined, Validators.required ],\n        password: [ undefined, Validators.required ]\n      });\n    }\n\n    public submitForm = () => {\n      // User the CRUD service to log user\n      this.CrudService.createItem('auth/login', this.form.value)\n      .then( apiResponse => {\n        console.log(apiResponse)\n      })\n      .catch( apiResponse => {\n        console.error(apiResponse)\n      })\n    }\n  //\n\n  ngOnInit() {\n    this.resetForm();\n   }\n\n  ngOnChanges(changes: any) {}\n}\n//\n","/* \nImports\n*/\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { LoginFormComponent } from \"./login-form.component\";\n\n    // Gestion des formulaires\n    import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n//\n\n/* \nDefinition & export\n*/\n    @NgModule({\n        declarations: [ LoginFormComponent ],\n        exports: [ LoginFormComponent ],\n        imports: [ \n            CommonModule, \n            FormsModule, \n            ReactiveFormsModule \n        ]\n    })\n\n    export class LoginFormModule{};\n//","/* \nImports\n*/\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { PostComponent } from \"./post.component\";\n//\n\n/* \nDefinition & export\n*/\n    @NgModule({\n        declarations: [ PostComponent ],\n        exports: [ PostComponent ],\n        imports: [ CommonModule ]\n    })\n\n    export class PostModule{};\n//","/* \nInport\n*/\n  import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n  import { PostModel } from \"../../models/post.model\";\n//\n\n/* \nDesfinnition & export\n*/\n  @Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html'\n  })\n  export class PostComponent implements OnInit {\n    /* \n    Declaration\n    */\n      @Input() post: PostModel;\n      @Output() sendPostId = new EventEmitter();\n    //\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n  }\n//","/* \nImports\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from \"@angular/router\";\n\n  // Inner\n  import { CrudService } from \"../../services/crud/crud.service\";\n  import { PostModel } from \"../../models/post.model\";\n//\n\n/* \nDefinition & export\n*/\n  @Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html'\n  })\n  export class HomePageComponent implements OnInit {\n    /* \n    DÃ©clarations\n    */\n      public postCollection: Array<PostModel>;\n    //\n    constructor(\n      private CrudService: CrudService,\n      private Router: Router,\n    ) { }\n\n    /* \n    Methods\n    */\n      private getPosts = () => {\n        this.CrudService.readItem('posts')\n        .then( apiResponse => {\n          this.postCollection = apiResponse\n        })\n        .catch( apiResponse => {\n          console.error(apiResponse)\n        })\n      }\n\n      public openPostPage = ( event: any ) => {\n        if(event.action === 'read'){\n          this.Router.navigateByUrl(`/post/${event.id}`)\n        }\n        else if( event.action === 'edit' ){\n          this.Router.navigateByUrl(`/edit/${event.id}`)\n        }\n        else if( event.action === 'delete' ){\n          this.CrudService.deleteItem('posts', event.id)\n          .then( apiResponse => {\n            console.log(apiResponse)\n          })\n          .catch( apiResponse => {\n            console.error(apiResponse)\n          })\n        }\n      }\n    //\n\n    /* \n    Hooks\n    */\n      ngOnInit() {\n        // this.getPosts();\n      }\n    //\n\n  }\n//","/* \nImports\n*/\n    // Angular\n    import { NgModule} from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n\n    // Components\n    import { HomePageComponent } from \"./home-page.component\";\n    import { Routing } from \"./router\";\n    import { PostModule } from \"../../components/post/module\";\n    import { LoginFormModule } from \"../../components/login-form/module\";\n//\n\n/* \nDefinition\n*/\n    @NgModule({\n        declarations: [ HomePageComponent ],\n        imports: [ CommonModule, Routing, PostModule, LoginFormModule ]\n    })\n//\n\n/* \nExport\n*/\n    export class Module{};\n//","/* \nImports\n*/\n    import { ModuleWithProviders } from \"@angular/core\";\n    import { Routes, RouterModule } from \"@angular/router\";\n    import { HomePageComponent } from \"./home-page.component\";\n//\n\n/* \nDefinition\n*/\n    const route: Routes = [\n        {\n            path: '',\n            component: HomePageComponent\n        }\n    ]\n//\n\n/* \nExport\n*/\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route)\n//"],"sourceRoot":"webpack:///"}